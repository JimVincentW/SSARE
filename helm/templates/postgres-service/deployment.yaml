apiVersion: apps/v1
kind: Deployment
metadata:
  name: "postgres-service"
spec:
  selector:
    matchLabels:
      app: "postgres-service"
  replicas: 1
  template:
    metadata:
      labels:
        app: "postgres-service"
    spec:
      serviceAccountName: "ssare"
      containers:
        - name: "postgres"
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: "postgres.postgres-storage.credentials.postgresql.acid.zalan.do"
                  key: "username"
            - name: POSTGRES_HOST
              value: "postgres-storage.{{ .Release.Namespace }}.svc.cluster.local"
            - name: POSTGRES_DATABASE
              value: "{{ .Values.postgres_service.postgres_db }}"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "postgres.postgres-storage.credentials.postgresql.acid.zalan.do"
                  key: "password"
          readinessProbe:
            httpGet:
              path: /healthz
              port: 5434
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 5434
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10
          image: "{{ .Values.postgres_service.image.repository }}:{{ .Values.postgres_service.image.tag }}"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 6969
              protocol: TCP
