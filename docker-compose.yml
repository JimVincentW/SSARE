version: '3.9'

services:
  redis:
    image: redis:latest
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./core/configs/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - app_network

  main_core_app:
    build: 
      context: ./SSARE
      dockerfile: ./app/Dockerfile
    ports:
      - "8080:8080"
    networks:
      - app_network
    depends_on:
      - scraper_service
      - postgres_service
      - redis
    develop:
      watch:
        - action: sync
          path: .
          target: /app
        - action: rebuild
          path: .

  scraper_service:
    build: 
      context: ./SSARE
      dockerfile: ./scraper_service/Dockerfile
    ports:
      - "8081:8081"
    networks:
      - app_network
    develop:
      watch:
        - action: sync
          path: .
          target: /app
        - action: rebuild
          path: .
    depends_on:
      - redis
  
  qdrant_service:
    build: 
      context: ./SSARE
      dockerfile: ./qdrant_service/Dockerfile
    ports:
      - "6969:6969"
    networks:
      - app_network
    develop:
      watch:
        - action: sync
          path: .
          target: /app
        - action: rebuild
          path: .
      
  qdrant_storage:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    volumes:
      - ./qdrant_service/qdrant_storage:/qdrant/data
    networks:
      - app_network

  postgres_db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ssare_db
      POSTGRES_USER: hello
      POSTGRES_PASSWORD: world
    volumes:
      - ./core/sql_commands:/docker-entrypoint-initdb
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network

  postgres_service:
    build: 
      context: ./SSARE
      dockerfile: ./postgres_service/Dockerfile
    ports:
      - "5434:5434"
    networks:
      - app_network
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore: 
            - requirements.txt
        - action: rebuild
          path: .
    depends_on:
      - redis
      - postgres_db
      
  nlp_service:
    build: 
      context: ./SSARE
      dockerfile: ./nlp_service/Dockerfile
    ports:
      - "0420:0420"
    networks:
      - app_network
    depends_on:
      - redis
      - postgres_service
    develop:
      watch:
        - action: sync
          path: .
          target: /app
        - action: rebuild
          path: .

  prefect_server:
    image: prefecthq/prefect:latest
    ports:
      - "4200:4200"
    command: prefect server start
    environment:
      - PREFECT_SERVER_API_URL=http://prefect_server:4200
      - PREFECT_SERVER_DATABASE_URL=postgresql://hello:world@postgres_service:5432/prefect
      - PREFECT_SERVER_UI_API_URL=http://prefect_server:4200/api
      - PREFECT_API_KEY=${PREFECT_API_KEY}
    networks:
      - app_network

  prefect_agent:
    image: prefecthq/prefect:2.3.0-python3.10
    restart: always
    entrypoint: ["prefect", "agent", "start", "-q", "YOUR_WORK_QUEUE_NAME"]
    environment:
      - PREFECT_API_URL=http://server:4200/api

networks:
  app_network:

volumes:
  postgres_data:
